{
  "swagger": "2.0",
  "info": {
    "description": "Definition of ISBNdb.com API v2. \n\nIf you are a **PREMIUM** subscriber you are entitled to **3 requests per second limit**. To access this benefit use the following [ Base URL: api.premium.isbndb.com ] \n*Please note that the above is only available for **PREMIUM** subscribers. Attempting to use your API key if you are in a different subscription plan will result in access being denied.* \n\nIf you are a **PRO** subscriber you are entitled to **5 requests per second limit**. To access this benefit use the following [ Base URL: api.pro.isbndb.com ] \n*Please note that the above is only available for **PRO** subscribers. Attempting to use your API key if you are in a different subscription plan will result in access being denied.*",
    "version": "2.0.0",
    "title": "ISBNdb API v2"
  },
  "host": "api2.isbndb.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/author/{name}": {
      "get": {
        "tags": [
          "Author"
        ],
        "summary": "Gets author details",
        "description": "Returns the name and a list of books by the author.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of an author in the Author's database",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "How many items should be returned per page, maximum of 1,000",
            "required": false,
            "type": "integer",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "The author name was found in the database",
            "schema": {
              "$ref": "#/definitions/Author"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          },
          "404": {
            "description": "Author not found"
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    },
    "/authors/{query}": {
      "get": {
        "tags": [
          "Author"
        ],
        "summary": "Search authors",
        "description": "This returns a list of authors whos name matches the given query",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "How many items should be returned per page, maximum of 1,000",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "path",
            "description": "A string to search for in the Author’s database",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The query string found results in the author's database",
            "schema": {
              "$ref": "#/definitions/AuthorQueryResults"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          },
          "404": {
            "description": "There are no results in the author's database for the given query"
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    },
    "/book/{isbn}": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Gets book details",
        "description": "Returns the book details",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "isbn",
            "in": "path",
            "description": "an ISBN 10 or ISBN 13 in the Books database",
            "required": true,
            "type": "string"
          },
          {
            "name": "with_prices",
            "in": "query",
            "description": "indicate if shows Real Time Prices. Only with the Pro plan",
            "required": false,
            "type": "string",
            "enum": ["1", "0"]
          }
        ],
        "responses": {
          "200": {
            "description": "The book ISBN was found in the database",
            "schema": {
              "$ref": "#/definitions/Book"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    },
    "/books": {
      "post": {
        "tags": [
          "Book"
        ],
        "summary": "Search books",
        "description": "This returns a list of books that match the query. Only with the Premium and Pro plans. This endpoint has no pagination but it has the following limits: You can only send up to 1,000 ISBN numbers per request. If you send 100 ISBN numbers you will get information back for all 100 books in the response provided the ISBNs do exist in the ISBNdb Database. ISBN Numbers not found in the ISBNdb database will not be part of the response. There is a limit of up to 6MB response size, if the limit is exceeded you will get a 500 error reply. \n\n__This endpoint does not return pricing information.__",
        "consumes": [
          "application/json",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "isbns",
            "in": "formData",
            "description": "a list of ISBN 10 or ISBN 13 in the Books database",
            "required": true,
            "type": "array",
            "items" : {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The query string found results in the book's database",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    },
    "/books/{query}": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Search books",
        "description": "This returns a list of books that match the query. \n\n__This endpoint does not return pricing information.__",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "path",
            "description": "A string to search for in the Book’s database",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "How many items should be returned per page, maximum of 1,000",
            "required": false,
            "type": "integer",
            "default": 20
          },
          {
            "name": "column",
            "in": "query",
            "description": "Search limited to this column:\n * `` - Empty value search in every column\n * `title` - Only searches in Books Title\n * `author` - Only searches books by the given Author\n * `date_published` - Only searches books in a given year, e.g. 1998\n * `subjects` - Only searches books by the given subject, e.g. physics",
            "required": false,
            "type": "string",
            "enum": ["", "title", "author", "date_published", "subjects"],
            "default": ""
          },
          {
            "name": "year",
            "in": "query",
            "description": "Filter books by year of publication",
            "required": false,
            "type": "integer"
          },
          {
            "name": "edition",
            "in": "query",
            "description": "Filter books by edition",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The query string found results in the books's database",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          },
          "404": {
            "description": "There are no results in the book's database for the given query"
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    },
    "/publisher/{name}": {
      "get": {
        "tags": [
          "Publisher"
        ],
        "summary": "Gets publisher details",
        "description": "Returns details and a list of books by the publisher.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of a publisher in the Publisher's database",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them",
            "required": false,
            "type": "integer",
            "default": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "How many items should be returned per page, maximum of 1,000",
            "required": false,
            "type": "integer",
            "default": 20
          }
        ],
        "responses": {
          "200": {
            "description": "The publisher name was found in the database",
            "schema": {
              "$ref": "#/definitions/Publisher"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          },
          "404": {
            "description": "Publisher not found"
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    },
    "/publishers/{query}": {
      "get": {
        "tags": [
          "Publisher"
        ],
        "summary": "Search publishers",
        "description": "This returns a list of publishers that match the given query",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "How many items should be returned per page, maximum of 1,000",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "path",
            "description": "A string to search for in the Publisher’s database",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The query string found results in the publisher's database",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          },
          "404": {
            "description": "No results found."
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    },
    "/search/{index}": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search all ISBNDB databases",
        "description": "Uses a determined index and query string to search in any of the ISBNDB's databases",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "index",
            "in": "path",
            "required": true,
            "description": "Only this values are valids: subjects, publishers, authors y books",
            "type": "string",
            "enum": ["subjects", "publishers", "authors", "books"]
          },
          {
            "name": "page",
            "in": "query",
            "description": "The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "How many items should be returned per page, maximum of 1,000",
            "required": false,
            "type": "string"
          },
          {
            "name": "isbn",
            "in": "query",
            "description": "an ISBN 10 in the Books database",
            "required": false,
            "type": "string"
          },
          {
            "name": "isbn13",
            "in": "query",
            "description": "an ISBN 13 in the Books database",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The name of an author in the Author's database",
            "required": false,
            "type": "string"
          },
          {
            "name": "text",
            "in": "query",
            "description": "A string to search for determinated index database",
            "required": false,
            "type": "string"
          },
          {
            "name": "subject",
            "in": "query",
            "description": "A subject in the Subject's database",
            "required": false,
            "type": "string"
          },
          {
            "name": "publisher",
            "in": "query",
            "description": "The name of a publisher in the Publisher's database",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Results were found in the requested database",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          },
          "404": {
            "description": "No results found in the requested database"
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    },
    "/stats": {
      "get": {
        "tags": [
          "Stats"
        ],
        "summary": "Gets status on the ISBNDB Database",
        "description": "Returns a status object about the ISBNDB database.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Stats on the ISBNDB sucessfully retrieved",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    },
    "/subject/{name}": {
      "get": {
        "tags": [
          "Subject"
        ],
        "summary": "Gets subject details",
        "description": "Returns details and a list of books with subject.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "A subject in the Subject's database",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The subject was found in the database",
            "schema": {
              "$ref": "#/definitions/Subject"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          },
          "404": {
            "description": "Subject not found"
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    },
    "/subjects/{query}": {
      "get": {
        "tags": [
          "Subject"
        ],
        "summary": "Search subjects",
        "description": "This returns a list of subjects that match the given query",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "How many items should be returned per page, maximum of 1,000",
            "required": false,
            "type": "string"
          },
          {
            "name": "query",
            "in": "path",
            "description": "A string to search for in the Subject’s database",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The number of page to retrieve, please note the API will not return more than 10,000 results no matter how you paginate them",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The query string found results in the subject's database",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string",
                "description": "CORS Header to allow different origin responses"
              }
            }
          },
          "404": {
            "description": "There are no results in the subject's database for the given query"
          }
        },
        "security": [
          {
            "lambda_token": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "lambda_token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "x-amazon-apigateway-authtype": "custom"
    }
  },
  "definitions": {
    "AuthorQueryResults": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer"
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Describes the results of a query in the author's database"
    },
    "Book": {
      "type": "object",
      "properties": {
        "book": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "title_long": {
              "type": "string"
            },
            "isbn": {
              "type": "string"
            },
            "isbn13": {
              "type": "string"
            },
            "dewey_decimal": {
              "type": "string"
            },
            "binding": {
              "type": "string"
            },
            "publisher": {
              "type": "string"
            },
            "language": {
              "type": "string"
            },
            "date_published": {
              "type": "string",
              "format": "date-time"
            },
            "edition": {
              "type": "string"
            },
            "pages": {
              "type": "integer"
            },
            "dimensions": {
              "type": "string"
            },
            "dimensions_structured": {
                  "type": "object",
                  "properties": {
                      "length": {
                          "type": "object",
                          "properties": {
                              "unit": {
                                  "type": "string"
                              },
                              "value": {
                                  "type": "number"
                              }
                          }
                      },
                      "width": {
                          "type": "object",
                          "properties": {
                              "unit": {
                                  "type": "string"
                              },
                              "value": {
                                  "type": "number"
                              }
                          }
                      },
                      "height": {
                          "type": "object",
                          "properties": {
                              "unit": {
                                  "type": "string"
                              },
                              "value": {
                                  "type": "number"
                              }
                          }
                      },
                      "weight": {
                          "type": "object",
                          "properties": {
                              "unit": {
                                  "type": "string"
                              },
                              "value": {
                                  "type": "number"
                              }
                          }
                      }
                  },
                  "description": "Structured information about the book's dimensions."
              },
            "overview": {
              "type": "string"
            },
            "image": {
              "$ref": "#/definitions/CoverLink"
            },
            "msrp": {
              "type": "number"
            },
            "excerpt": {
              "type": "string"
            },
            "synopsis": {
              "type": "string"
            },
            "authors": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subjects": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "reviews": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "prices": {
              "description": "Only shows if the query param 'with_prices' is present.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Merchant"
              }
            },
            "related": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                }
              }
            },
            "other_isbns": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isbn": {
                    "type": "string"
                  },
                  "binding": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "description": "Describes a book in the book's database"
    },
    "Author": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "books": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Book"
          }
        }
      },
      "description": "Describes the name of an author and the books written by that author in the database"
    },
    "Publisher": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "books": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "isbn": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Subject": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        }
      }
    },
    "CoverLink": {
      "type": "string",
      "description": "The link to the cover image"
    },
    "Merchant": {
      "type": "object",
      "description": "Describe the conditions of the price by merchant. Only with the Pro plan",
      "properties": {
        "condition": {
          "type": "string"
        },
        "merchant": {
          "type": "string"
        },
        "merchant_logo": {
          "type": "string"
        },
        "merchant_logo_offset": {
          "type": "object",
          "properties": {
            "x": {
              "type": "string"
            },
            "y": {
              "type": "string"
            }
          }
        },
        "shipping": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "total": {
          "type": "string"
        },
        "link": {
          "type": "string"
        }
      }
    }
  }
}